name: CMake

on:
  push:
    branches: [ "refactor" ]
  pull_request:
    branches: [ "refactor" ]

env:
  # Customize the CMake build type here (Release, Debug, RelWithDebInfo, etc.)
  BUILD_TYPE: Release

jobs:
  build:
    # The CMake configure and build commands are platform agnostic and should work equally well on Windows or Mac.
    # You can convert this to a matrix build if you need cross-platform coverage.
    # See: https://docs.github.com/en/free-pro-team@latest/actions/learn-github-actions/managing-complex-workflows#using-a-build-matrix
    runs-on: windows-latest
    
    strategy:
      matrix:
        python-version: ["3.11"]

    steps:
    - uses: actions/checkout@v3

    #- run: git log -1 --pretty=format:%H
    #- run: git symbolic-ref --short -q HEAD
      
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}
    
    - run: pwd
    - name: Install Qt
      uses: jurplel/install-qt-action@v3
      with:
        version: '5.15.2'
        host: 'windows'
        target: 'desktop'
        arch: 'win64_msvc2019_64'
        dir: '${{ github.workspace }}/external/'
        install-deps: 'true'
        setup-python: 'false'
        set-env: 'true'
      
    #- name: Generate setup-vcpkg.json
    #  uses: "DamianReeves/write-file-action@master"
    #  with:
    #    path: ${{github.workspace}}/setup-vcpkg.json
    #    write-mode: overwrite
    #    contents: |
    #      {
    #          "title": "This is a configuration file the content of which varies with each user",
    #          "values": {
    #              "Qt5ConfigDir": {
    #                  "intro": "The absolute path of the directory where Qt5Config.cmake exists",
    #                  "value": "${{env.Qt5_Dir}}/lib/cmake/Qt5"
    #              }
    #          }
    #      }
      
    - name: Set up vcpkg
      run: python ${{github.workspace}}/setup-vcpkg.py --qt5dir=${{env.Qt5_Dir}}/lib/cmake/Qt5

    - name: List Dir
      run: tree

    - name: Configure CMake
      # Configure CMake in a 'build' subdirectory. `CMAKE_BUILD_TYPE` is only required if you are using a single-configuration generator such as make.
      # See https://cmake.org/cmake/help/latest/variable/CMAKE_BUILD_TYPE.html?highlight=cmake_build_type
      run: cmake -B ${{github.workspace}}/build -S ${{github.workspace}} -DCMAKE_BUILD_TYPE=${{env.BUILD_TYPE}} -DCMAKE_PREFIX_PATH=${{env.Qt5_Dir}}/lib/cmake/Qt5 -DCMAKE_INSTALL_PREFIX=${{github.workspace}}/install

    - name: Build
      # Build your program with the given configuration
      run: cmake --build ${{github.workspace}}/build --config ${{env.BUILD_TYPE}} --parallel

    - name: Test
      working-directory: ${{github.workspace}}/build
      # Execute tests defined by the CMake configuration.
      # See https://cmake.org/cmake/help/latest/manual/ctest.1.html for more detail
      run: ctest -C ${{env.BUILD_TYPE}}

